/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

body {
  color: #401919;
  background: #fefefe;
  line-height: 1.7em; }

@media only screen and (max-width: 767px) {
  body {
    width: 100%;
    min-width: 320px; } }

@media only screen and (min-width: 768px) {
  body {
    min-width: 1000px; } }

a {
  display: block;
  text-decoration: none; }

dd {
  margin: 0; }

.ly_wrapper {
  width: 90%;
  margin: 0 auto 10em; }

@media only screen and (min-width: 768px) {
  .ly_wrapper {
    margin-bottom: 12em; } }

.ly_wrapper:last-child {
  margin-bottom: 0; }

.ly_wrapper_ttl {
  width: 100%;
  color: #A82530;
  font-size: 1.75rem;
  text-align: center;
  margin: 0 auto 2em; }

.ly_wrapper_conts {
  width: 100%;
  font-size: 1rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: wrap;
  flex-flow: wrap;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 0 auto 3em; }

.ly_wrapper_conts a {
  display: block;
  width: 100%; }

.ly_wrapper_conts_ttl {
  -webkit-box-ordinal-group: 3;
  -ms-flex-order: 2;
  order: 2;
  width: 100%;
  color: #A82530;
  font-size: 1.75rem;
  margin: 0 0 .8em; }

.ly_wrapper_conts_ttl2 {
  -webkit-box-ordinal-group: 4;
  -ms-flex-order: 3;
  order: 3; }

.ly_wrapper_conts_term {
  -webkit-box-ordinal-group: 2;
  -ms-flex-order: 1;
  order: 1;
  font-size: 0.812rem; }

.ly_wrapper_conts_desc {
  -webkit-box-ordinal-group: 5;
  -ms-flex-order: 4;
  order: 4; }

.ly_header {
  width: 90%;
  text-align: center;
  margin: 2.5em auto 5em; }

.ly_header_ttl {
  -webkit-box-ordinal-group: 3;
  -ms-flex-order: 2;
  order: 2;
  width: 100%;
  color: #A82530;
  font-size: 1.75rem;
  letter-spacing: .03em;
  margin: 0 auto .5em; }

.ly_header_ttl2 {
  -webkit-box-ordinal-group: 4;
  -ms-flex-order: 3;
  order: 3;
  color: #FF6B77;
  font-size: 0.875rem;
  letter-spacing: .02em;
  margin: 0 auto 2.5em; }

.ly_header_media {
  -webkit-box-ordinal-group: 2;
  -ms-flex-order: 1;
  order: 1;
  margin-top: 0; }

.ly_header_desc {
  -webkit-box-ordinal-group: 5;
  -ms-flex-order: 4;
  order: 4;
  font-size: 0.812rem;
  line-height: 1.7em;
  letter-spacing: .05em;
  margin: 0 auto; }

@media only screen and (min-width: 768px) {
  .ly_header_desc {
    width: 100%; } }

body {
  color: #401919;
  background: #fefefe;
  line-height: 1.7em; }

@media only screen and (max-width: 767px) {
  body {
    width: 100%;
    min-width: 320px; } }

@media only screen and (min-width: 768px) {
  body {
    min-width: 1000px; } }

a {
  display: block;
  text-decoration: none; }

dd {
  margin: 0; }

.ly_wrapper {
  width: 90%;
  margin: 0 auto 10em; }

@media only screen and (min-width: 768px) {
  .ly_wrapper {
    margin-bottom: 12em; } }

.ly_wrapper:last-child {
  margin-bottom: 0; }

.ly_wrapper_ttl {
  width: 100%;
  color: #A82530;
  font-size: 1.75rem;
  text-align: center;
  margin: 0 auto 2em; }

.ly_wrapper_conts {
  width: 100%;
  font-size: 1rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: wrap;
  flex-flow: wrap;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 0 auto 3em; }

.ly_wrapper_conts a {
  display: block;
  width: 100%; }

.ly_wrapper_conts_ttl {
  -webkit-box-ordinal-group: 3;
  -ms-flex-order: 2;
  order: 2;
  width: 100%;
  color: #A82530;
  font-size: 1.75rem;
  margin: 0 0 .8em; }

.ly_wrapper_conts_ttl2 {
  -webkit-box-ordinal-group: 4;
  -ms-flex-order: 3;
  order: 3; }

.ly_wrapper_conts_term {
  -webkit-box-ordinal-group: 2;
  -ms-flex-order: 1;
  order: 1;
  font-size: 0.812rem; }

.ly_wrapper_conts_desc {
  -webkit-box-ordinal-group: 5;
  -ms-flex-order: 4;
  order: 4; }

.ly_wrapper.bl_about {
  width: 87%;
  max-width: 328px; }

.ly_wrapper.bl_about .ly_wrapper_conts {
  -ms-flex-flow: nowrap;
  flex-flow: nowrap;
  padding: .5em 0;
  margin-bottom: 0; }

.ly_wrapper.bl_about .ly_wrapper_conts .bl_about_data {
  width: 71%; }

@media only screen and (min-width: 768px) {
  .ly_wrapper.bl_about .ly_wrapper_conts .bl_about_data {
    width: 64%; } }

.ly_wrapper.bl_about .ly_wrapper_conts .bl_about_link {
  color: #A82530; }

.ly_wrapper.bl_about .ly_wrapper_conts .bl_about_link:hover {
  color: #FF6B77; }

body {
  color: #401919;
  background: #fefefe;
  line-height: 1.7em; }

@media only screen and (max-width: 767px) {
  body {
    width: 100%;
    min-width: 320px; } }

@media only screen and (min-width: 768px) {
  body {
    min-width: 1000px; } }

a {
  display: block;
  text-decoration: none; }

dd {
  margin: 0; }

.ly_wrapper {
  width: 90%;
  margin: 0 auto 10em; }

@media only screen and (min-width: 768px) {
  .ly_wrapper {
    margin-bottom: 12em; } }

.ly_wrapper:last-child {
  margin-bottom: 0; }

.ly_wrapper_ttl {
  width: 100%;
  color: #A82530;
  font-size: 1.75rem;
  text-align: center;
  margin: 0 auto 2em; }

.ly_wrapper_conts {
  width: 100%;
  font-size: 1rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: wrap;
  flex-flow: wrap;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 0 auto 3em; }

.ly_wrapper_conts a {
  display: block;
  width: 100%; }

.ly_wrapper_conts_ttl {
  -webkit-box-ordinal-group: 3;
  -ms-flex-order: 2;
  order: 2;
  width: 100%;
  color: #A82530;
  font-size: 1.75rem;
  margin: 0 0 .8em; }

.ly_wrapper_conts_ttl2 {
  -webkit-box-ordinal-group: 4;
  -ms-flex-order: 3;
  order: 3; }

.ly_wrapper_conts_term {
  -webkit-box-ordinal-group: 2;
  -ms-flex-order: 1;
  order: 1;
  font-size: 0.812rem; }

.ly_wrapper_conts_desc {
  -webkit-box-ordinal-group: 5;
  -ms-flex-order: 4;
  order: 4; }

.ly_wrapper.bl_exp {
  width: 69%; }

@media only screen and (min-width: 768px) {
  .ly_wrapper.bl_exp {
    width: 90%; } }

@media only screen and (min-width: 768px) {
  .ly_wrapper.bl_exp .ly_wrapper_ttl {
    margin-bottom: 4em; } }

.ly_wrapper.bl_exp .bl_exp_odd,
.ly_wrapper.bl_exp .bl_exp_even {
  position: relative;
  width: 80%;
  text-align: center;
  margin-left: 3em; }

@media only screen and (min-width: 768px) {
  .ly_wrapper.bl_exp .bl_exp_odd,
  .ly_wrapper.bl_exp .bl_exp_even {
    width: 100%;
    margin-left: 0; } }

@media only screen and (min-width: 768px) {
  .bl_exp_wrapper {
    padding: 0 2em; } }

.bl_exp_ttl {
  color: #A82530; }

.bl_exp_term {
  color: #FF6B77; }

@media only screen and (min-width: 768px) {
  .bl_exp_col {
    display: grid;
    grid-template-columns: 20% 30% 30% 20%;
    grid-template-rows: auto; }
  .bl_exp_col .ly_wrapper_conts:nth-child(1) {
    grid-column: 2 / 3;
    grid-row: 1 / 2; }
  .bl_exp_col .ly_wrapper_conts:nth-child(2) {
    grid-column: 3 / 4;
    grid-row: 2 / 3; }
  .bl_exp_col .ly_wrapper_conts:nth-child(3) {
    grid-column: 2 / 3;
    grid-row: 3 / 4; }
  .bl_exp_col .ly_wrapper_conts:nth-child(4) {
    grid-column: 3 / 4;
    grid-row: 4 / 5; }
  .bl_exp_col .ly_wrapper_conts:nth-child(5) {
    grid-column: 2 / 3;
    grid-row: 5 / 6; }
  .bl_exp_col .ly_wrapper_conts:nth-child(6) {
    grid-column: 3 / 4;
    grid-row: 6 / 7; } }

.bl_exp {
  position: relative; }

.bl_exp_line {
  position: absolute;
  left: 9px;
  top: 3em;
  background: #A82530;
  width: 3px;
  height: 100%;
  height: calc(100% + -2em); }

@media only screen and (min-width: 768px) {
  .bl_exp_line {
    top: 5em;
    left: 50%; } }

.bl_exp_line:before {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  left: -9px;
  width: 15px;
  height: 15px;
  border: solid 3px #FF6B77;
  border-radius: 50%;
  background: #A82530; }

@media only screen and (min-width: 768px) {
  .bl_exp_line:before {
    left: -13px;
    width: 23px;
    height: 23px; } }

.bl_exp_line:after {
  content: "";
  display: block;
  position: absolute;
  top: 100%;
  left: -4px;
  width: 11px;
  height: 11px;
  border-radius: 50%;
  background: #A82530; }

.bl_exp .bl_exp_odd:before,
.bl_exp .bl_exp_even:before {
  content: "";
  display: block;
  position: absolute;
  top: 50%;
  left: -3em;
  width: 15px;
  height: 15px;
  border: solid 3px #FF6B77;
  border-radius: 50%;
  background: #A82530; }

@media only screen and (min-width: 768px) {
  .bl_exp .bl_exp_odd:before {
    left: -9px; } }

@media only screen and (min-width: 768px) {
  .bl_exp .bl_exp_even:before {
    left: auto;
    right: -12px; } }

body {
  color: #401919;
  background: #fefefe;
  line-height: 1.7em; }

@media only screen and (max-width: 767px) {
  body {
    width: 100%;
    min-width: 320px; } }

@media only screen and (min-width: 768px) {
  body {
    min-width: 1000px; } }

a {
  display: block;
  text-decoration: none; }

dd {
  margin: 0; }

.ly_wrapper {
  width: 90%;
  margin: 0 auto 10em; }

@media only screen and (min-width: 768px) {
  .ly_wrapper {
    margin-bottom: 12em; } }

.ly_wrapper:last-child {
  margin-bottom: 0; }

.ly_wrapper_ttl {
  width: 100%;
  color: #A82530;
  font-size: 1.75rem;
  text-align: center;
  margin: 0 auto 2em; }

.ly_wrapper_conts {
  width: 100%;
  font-size: 1rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: wrap;
  flex-flow: wrap;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 0 auto 3em; }

.ly_wrapper_conts a {
  display: block;
  width: 100%; }

.ly_wrapper_conts_ttl {
  -webkit-box-ordinal-group: 3;
  -ms-flex-order: 2;
  order: 2;
  width: 100%;
  color: #A82530;
  font-size: 1.75rem;
  margin: 0 0 .8em; }

.ly_wrapper_conts_ttl2 {
  -webkit-box-ordinal-group: 4;
  -ms-flex-order: 3;
  order: 3; }

.ly_wrapper_conts_term {
  -webkit-box-ordinal-group: 2;
  -ms-flex-order: 1;
  order: 1;
  font-size: 0.812rem; }

.ly_wrapper_conts_desc {
  -webkit-box-ordinal-group: 5;
  -ms-flex-order: 4;
  order: 4; }

@media only screen and (min-width: 768px) {
  .bl_works {
    width: 90%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-flow: wrap;
    flex-flow: wrap;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    margin: 0 auto 4em; } }

.bl_works_wrapper {
  width: 82%; }

@media only screen and (min-width: 768px) {
  .bl_works_wrapper {
    width: 45%; } }

.bl_works_wrapper:last-child {
  margin-bottom: 0; }

.bl_works_link {
  display: block;
  text-align: center;
  color: #401919;
  -webkit-box-shadow: 0 2px 14px rgba(214, 187, 178, 0.3);
  box-shadow: 0 2px 14px rgba(214, 187, 178, 0.3);
  padding: 30px 20px; }

@media only screen and (min-width: 768px) {
  .bl_works_link:hover {
    border: 2px solid #A82530; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
